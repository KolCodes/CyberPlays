from tasks.task_a import detect_malware
from watchdog.observers import Observer
from watchdog.events import FileSystemEventHandler
from utils.file_utils import quarantine_file
from datetime import datetime

class MalwareHandler(FileSystemEventHandler):
    def __init__(self, signatures, log_file):
        self.signatures = signatures
        self.log_file = log_file

    def on_modified(self, event):
        if not event.is_directory:
            with open(event.src_path, 'rb') as f:
                data = f.read().decode(errors='ignore')
                if detect_malware(self.signatures, data):
                    quarantine_file(event.src_path)
                    with open(self.log_file, 'a') as log:
                        log.write(f"{datetime.now()} - Quarantined file: {event.src_path}\n")

def start_monitoring(path, signatures, log_file):
    event_handler = MalwareHandler(signatures, log_file)
    observer = Observer()
    observer.schedule(event_handler, path, recursive=True)
    observer.start()
    print(f"Monitoring directory: {path}")

    try:
        while True:
            pass
    except KeyboardInterrupt:
        observer.stop()
    observer.join()
