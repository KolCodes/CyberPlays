import hashlib

def create_hashes(text, multi=False):
    md5_hash = hashlib.md5(text.encode()).hexdigest()
    sha256_hash = hashlib.sha256(text.encode()).hexdigest()
    if multi:
        sha1_hash = hashlib.sha1(text.encode()).hexdigest()
        sha512_hash = hashlib.sha512(text.encode()).hexdigest()
        return md5_hash, sha1_hash, sha256_hash, sha512_hash
    return md5_hash, sha256_hash

def load_signatures(file_path):
    """
    Loads malware signatures from the specified file.

    Args:
        file_path (str): Path to the signature database file.

    Returns:
        set: A set of tuples, each containing an MD5 hash and an SHA256 hash.
    """
    signatures = set()
    with open(file_path, 'r') as f:
        # Check if the file has any content to skip the header
        first_line = f.readline().strip()
        if not first_line or "MD5 Hash" not in first_line:
            print("Warning: Signature file is empty or missing header.")
            return signatures  # Return an empty set if the file is empty or improperly formatted
        
        for line in f:
            # Skip empty lines or lines that don't match the expected format
            parts = line.strip().split(' | ')
            if len(parts) < 2:
                continue  # Skip lines that do not have at least MD5 and SHA256 hashes
            md5_hash, sha256_hash = parts[:2]  # Extract only the first two parts
            signatures.add((md5_hash, sha256_hash))
    return signatures


